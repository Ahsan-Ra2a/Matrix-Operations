INCLUDE Irvine32.inc

.data
	array DWORD 1,3,10,3
	inverse_array DWORD 4 DUP(0)
	count DWORD 2
	bc DWORD ?
	det DWORD ?
	error BYTE "Detereminat is Zero so Inverse is not Possible ",0
	msg BYTE "Determinant is : ",0
	space BYTE " ",0
	inverse_msg BYTE "Inverse Of Matrix is: ",0

.code
	main PROC
	mov esi, OFFSET array
	mov edi, OFFSET array
	add edi, 12

determinant:
	mov eax, [esi]
	mov edx, [edi]
	mul edx
	add esi, 4
	sub edi, 4
	PUSH eax
	dec count
	cmp count, 0
	ja determinant
	
	pop eax
	mov bc, eax
	pop edx
	sub edx, bc

	mov det, edx
	mov eax, det

	mov edx, OFFSET msg
	call Writestring
	call Writeint
	call Crlf

	cmp det, 0
	je not_possible



Inverse:
	mov esi, OFFSET array
	mov edi, OFFSET array
	add edi, 12
	
	mov ebx, [esi]
	mov ecx, [edi]

	mov [esi],ecx
	mov [edi],ebx

	add esi, 4
	sub edi, 4

	neg DWORD PTR [esi]
	neg DWORD PTR [edi]



	mov esi, OFFSET array
	mov edi, OFFSET inverse_array
	mov ecx, 4
	mov ebx, det

divide:
	mov eax, [esi]
	cdq
	idiv ebx
	mov [edi], eax
	add edi, 4
	add esi, 4
	loop divide

	mov edx, OFFSET inverse_msg
	call writestring
	call crlf

	mov esi, OFFSET inverse_array
	mov ecx, 2             
    mov edx, OFFSET space
    
display:
    mov ebx, 2
inner:
    mov eax, [esi]
    call Writefloat
    call WriteString
    add esi, 4
    dec ebx
    jnz inner

    call Crlf
    loop display  

	exit

not_possible:
	mov edx, OFFSET error
	call Writestring
	exit

main ENDP
END main